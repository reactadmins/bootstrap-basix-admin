"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[712],{1216:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>G,contentTitle:()=>M,default:()=>S,frontMatter:()=>L,metadata:()=>_,toc:()=>I});var a=t(7624),r=t(2172),s=t(2504),i=t(9998),o=t(992),d=t(9656),c=t(1760),l=t(8995),h=t(7464),m=t(256),p=t(3556),x=t(928),u=t(6564);const g=[{name:"Page A",uv:4e3,pv:2400,amt:2400},{name:"Page B",uv:3e3,pv:1398,amt:2210},{name:"Page C",uv:2e3,pv:9800,amt:2290},{name:"Page D",uv:2780,pv:3908,amt:2e3},{name:"Page E",uv:1890,pv:4800,amt:2181},{name:"Page F",uv:2390,pv:3800,amt:2500},{name:"Page G",uv:3490,pv:4300,amt:2100}],v=()=>(0,a.jsx)(x.c,{title:"Line Chart",children:(0,a.jsx)(u.c,{children:(0,a.jsx)(i.W,{width:"100%",height:300,children:(0,a.jsxs)(o.g,{width:500,height:300,data:g,children:[(0,a.jsx)(d._,{strokeDasharray:"3 3"}),(0,a.jsx)(c.K,{dataKey:"name",padding:{left:30,right:30}}),(0,a.jsx)(l.C,{}),(0,a.jsx)(h.o,{}),(0,a.jsx)(m.o,{}),(0,a.jsx)(p.s,{type:"monotone",dataKey:"pv",stroke:"#8884d8",activeDot:{r:8}}),(0,a.jsx)(p.s,{type:"monotone",dataKey:"uv",stroke:"#82ca9d"})]})})})});var C=t(7452),y=t(468);const j=[{name:"Page A",uv:4e3,pv:2400,amt:2400},{name:"Page B",uv:3e3,pv:1398,amt:2210},{name:"Page C",uv:-1e3,pv:9800,amt:2290},{name:"Page D",uv:500,pv:3908,amt:2e3},{name:"Page E",uv:-2e3,pv:4800,amt:2181},{name:"Page F",uv:-250,pv:3800,amt:2500},{name:"Page G",uv:3490,pv:4300,amt:2100}],f=(()=>{const n=Math.max(...j.map((n=>n.uv))),e=Math.min(...j.map((n=>n.uv)));return n<=0?0:e>=0?1:n/(n-e)})(),b=()=>(0,a.jsx)(x.c,{title:"Area Chart",children:(0,a.jsx)(u.c,{children:(0,a.jsx)(i.W,{width:"100%",height:300,children:(0,a.jsxs)(C.s,{width:600,height:300,data:j,margin:{top:10,right:30,left:0,bottom:0},children:[(0,a.jsx)(d._,{strokeDasharray:"3 3"}),(0,a.jsx)(c.K,{dataKey:"name"}),(0,a.jsx)(l.C,{}),(0,a.jsx)(h.o,{}),(0,a.jsx)("defs",{children:(0,a.jsxs)("linearGradient",{id:"splitColor",x1:"0",y1:"0",x2:"0",y2:"1",children:[(0,a.jsx)("stop",{offset:f,stopColor:"green",stopOpacity:1}),(0,a.jsx)("stop",{offset:f,stopColor:"red",stopOpacity:1})]})}),(0,a.jsx)(y.g,{type:"monotone",dataKey:"uv",stroke:"#000",fill:"url(#splitColor)"})]})})})});var A=t(7756),k=t(3540);const B=[{name:"Page A",uv:4e3,pv:2400,amt:2400},{name:"Page B",uv:3e3,pv:1398,amt:2210},{name:"Page C",uv:2e3,pv:9800,amt:2290},{name:"Page D",uv:2780,pv:3908,amt:2e3},{name:"Page E",uv:1890,pv:4800,amt:2181},{name:"Page F",uv:2390,pv:3800,amt:2500},{name:"Page G",uv:3490,pv:4300,amt:2100}],w=()=>(0,a.jsx)(x.c,{title:"Bar Chart",children:(0,a.jsx)(u.c,{children:(0,a.jsx)(i.W,{width:"100%",height:300,children:(0,a.jsxs)(A.e,{width:500,height:300,data:B,margin:{top:20,right:30,left:20,bottom:5},children:[(0,a.jsx)(d._,{strokeDasharray:"3 3"}),(0,a.jsx)(c.K,{dataKey:"name"}),(0,a.jsx)(l.C,{}),(0,a.jsx)(h.o,{}),(0,a.jsx)(m.o,{}),(0,a.jsx)(k.U,{dataKey:"pv",stackId:"a",fill:"#8884d8"}),(0,a.jsx)(k.U,{dataKey:"amt",stackId:"a",fill:"#82ca9d"}),(0,a.jsx)(k.U,{dataKey:"uv",fill:"#ffc658"})]})})})});var P=t(7932),K=t(4776);const R=[{x:100,y:200,z:200},{x:120,y:100,z:260},{x:170,y:300,z:400},{x:140,y:250,z:280},{x:150,y:400,z:500},{x:110,y:280,z:200}],z=[{x:300,y:300,z:200},{x:400,y:500,z:260},{x:200,y:700,z:400},{x:340,y:350,z:280},{x:560,y:500,z:500},{x:230,y:780,z:200},{x:500,y:400,z:200},{x:300,y:500,z:260},{x:240,y:300,z:400},{x:320,y:550,z:280},{x:500,y:400,z:500},{x:420,y:280,z:200}],N=()=>(0,a.jsx)(x.c,{title:"Scatter Chart",children:(0,a.jsx)(u.c,{children:(0,a.jsx)(i.W,{width:"100%",height:300,children:(0,a.jsx)("div",{className:"d-flex justify-content-center align-items-center",children:(0,a.jsxs)(P.Y,{width:500,height:300,margin:{top:20,right:20,bottom:20,left:20},children:[(0,a.jsx)(d._,{}),(0,a.jsx)(c.K,{type:"number",dataKey:"x",name:"stature",unit:"cm"}),(0,a.jsx)(l.C,{yAxisId:"left",type:"number",dataKey:"y",name:"weight",unit:"kg",stroke:"#8884d8"}),(0,a.jsx)(l.C,{yAxisId:"right",type:"number",dataKey:"z",name:"weight",unit:"kg",orientation:"right",stroke:"#82ca9d"}),(0,a.jsx)(h.o,{cursor:{strokeDasharray:"3 3"}}),(0,a.jsx)(K.Y,{yAxisId:"left",name:"A school",data:R,fill:"#8884d8"}),(0,a.jsx)(K.Y,{yAxisId:"right",name:"A school",data:z,fill:"#82ca9d"})]})})})})}),L={sidebar_position:3},M=void 0,_={id:"Charts/Recharts",title:"Recharts",description:"This is short description",source:"@site/docs/Charts/Recharts.mdx",sourceDirName:"Charts",slug:"/Charts/Recharts",permalink:"/Charts/Recharts",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Charts/Recharts.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"ApexCharts",permalink:"/Charts/ApexCharts"},next:{title:"GoogleMap",permalink:"/Maps/GoogleMap"}},G={},I=[{value:"Examples",id:"examples",level:2},{value:"Line Chart",id:"line-chart",level:3},{value:"Area Chart",id:"area-chart",level:3},{value:"Bar Chart",id:"bar-chart",level:3},{value:"Scatter Chart",id:"scatter-chart",level:3}];function D(n){const e={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.M)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"This is short description"}),"\n","\n","\n",(0,a.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(e.h3,{id:"line-chart",children:"Line Chart"}),"\n",(0,a.jsx)(s.c,{children:(0,a.jsx)(v,{})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-jsx",metastring:'title="Line Chart"',children:'import {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n} from "recharts";\nimport Card from "@/components/Card/Card";\nimport { CardBody } from "react-bootstrap";\n\nconst data = [\n    {\n        name: "Page A",\n        uv: 4000,\n        pv: 2400,\n        amt: 2400,\n    },\n    {\n        name: "Page B",\n        uv: 3000,\n        pv: 1398,\n        amt: 2210,\n    },\n    ...\n];\n\nconst LineRechart = () => {\n    return (\n        <Card title="Line Chart">\n            <CardBody>\n                <ResponsiveContainer width="100%" height={300}>\n                    <LineChart width={500} height={300} data={data}>\n                        <CartesianGrid strokeDasharray="3 3" />\n                        <XAxis\n                            dataKey="name"\n                            padding={{ left: 30, right: 30 }}\n                        />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Line\n                            type="monotone"\n                            dataKey="pv"\n                            stroke="#8884d8"\n                            activeDot={{ r: 8 }}\n                        />\n                        <Line type="monotone" dataKey="uv" stroke="#82ca9d" />\n                    </LineChart>\n                </ResponsiveContainer>\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default LineRechart;\n'})}),"\n",(0,a.jsx)(e.h3,{id:"area-chart",children:"Area Chart"}),"\n",(0,a.jsx)(s.c,{children:(0,a.jsx)(b,{})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-jsx",metastring:'title="Area Chart"',children:'import {\n    AreaChart,\n    Area,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    ResponsiveContainer,\n} from "recharts";\nimport Card from "@/components/Card/Card";\nimport { CardBody } from "react-bootstrap";\n\nconst data = [\n    {\n        name: "Page A",\n        uv: 4000,\n        pv: 2400,\n        amt: 2400,\n    },\n    {\n        name: "Page B",\n        uv: 3000,\n        pv: 1398,\n        amt: 2210,\n    },\n    ...\n];\n\nconst gradientOffset = () => {\n    const dataMax = Math.max(...data.map((i) => i.uv));\n    const dataMin = Math.min(...data.map((i) => i.uv));\n\n    if (dataMax <= 0) {\n        return 0;\n    }\n    if (dataMin >= 0) {\n        return 1;\n    }\n\n    return dataMax / (dataMax - dataMin);\n};\n\nconst off = gradientOffset();\nconst AreaRechart = () => {\n    return (\n        <Card title="Area Chart">\n            <CardBody>\n                <ResponsiveContainer width="100%" height={300}>\n                    <AreaChart\n                        width={600}\n                        height={300}\n                        data={data}\n                        margin={{\n                            top: 10,\n                            right: 30,\n                            left: 0,\n                            bottom: 0,\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray="3 3" />\n                        <XAxis dataKey="name" />\n                        <YAxis />\n                        <Tooltip />\n                        <defs>\n                            <linearGradient\n                                id="splitColor"\n                                x1="0"\n                                y1="0"\n                                x2="0"\n                                y2="1"\n                            >\n                                <stop\n                                    offset={off}\n                                    stopColor="green"\n                                    stopOpacity={1}\n                                />\n                                <stop\n                                    offset={off}\n                                    stopColor="red"\n                                    stopOpacity={1}\n                                />\n                            </linearGradient>\n                        </defs>\n                        <Area\n                            type="monotone"\n                            dataKey="uv"\n                            stroke="#000"\n                            fill="url(#splitColor)"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default AreaRechart;\n'})}),"\n",(0,a.jsx)(e.h3,{id:"bar-chart",children:"Bar Chart"}),"\n",(0,a.jsx)(s.c,{children:(0,a.jsx)(w,{})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-jsx",metastring:'title="Bar Chart"',children:'import { CardBody } from "react-bootstrap";\nimport Card from "@/components/Card/Card";\nimport {\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n} from "recharts";\n\nconst data = [\n    {\n        name: "Page A",\n        uv: 4000,\n        pv: 2400,\n        amt: 2400,\n    },\n    {\n        name: "Page B",\n        uv: 3000,\n        pv: 1398,\n        amt: 2210,\n    },\n    ...\n];\nconst BarRechart = () => {\n    return (\n        <Card title="Bar Chart">\n            <CardBody>\n                <ResponsiveContainer width="100%" height={300}>\n                    <BarChart\n                        width={500}\n                        height={300}\n                        data={data}\n                        margin={{\n                            top: 20,\n                            right: 30,\n                            left: 20,\n                            bottom: 5,\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray="3 3" />\n                        <XAxis dataKey="name" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Bar dataKey="pv" stackId="a" fill="#8884d8" />\n                        <Bar dataKey="amt" stackId="a" fill="#82ca9d" />\n                        <Bar dataKey="uv" fill="#ffc658" />\n                    </BarChart>\n                </ResponsiveContainer>\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default BarRechart;\n'})}),"\n",(0,a.jsx)(e.h3,{id:"scatter-chart",children:"Scatter Chart"}),"\n",(0,a.jsx)(s.c,{children:(0,a.jsx)(N,{})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-jsx",metastring:'title="Line Chart"',children:'import {\n    ScatterChart,\n    Scatter,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    ResponsiveContainer,\n} from "recharts";\nimport Card from "@/components/Card/Card";\nimport { CardBody } from "react-bootstrap";\n\nconst data01 = [\n    { x: 100, y: 200, z: 200 },\n    { x: 120, y: 100, z: 260 },\n    ...\n];\nconst data02 = [\n    { x: 300, y: 300, z: 200 },\n    { x: 400, y: 500, z: 260 },\n    ...\n];\n\nconst ScatterRechart = () => {\n    return (\n        <Card title="Scatter Chart">\n            <CardBody>\n                <ResponsiveContainer width="100%" height={300}>\n                    <div className="d-flex justify-content-center align-items-center">\n                        <ScatterChart\n                            width={500}\n                            height={300}\n                            margin={{\n                                top: 20,\n                                right: 20,\n                                bottom: 20,\n                                left: 20,\n                            }}\n                        >\n                            <CartesianGrid />\n                            <XAxis\n                                type="number"\n                                dataKey="x"\n                                name="stature"\n                                unit="cm"\n                            />\n                            <YAxis\n                                yAxisId="left"\n                                type="number"\n                                dataKey="y"\n                                name="weight"\n                                unit="kg"\n                                stroke="#8884d8"\n                            />\n                            <YAxis\n                                yAxisId="right"\n                                type="number"\n                                dataKey="z"\n                                name="weight"\n                                unit="kg"\n                                orientation="right"\n                                stroke="#82ca9d"\n                            />\n                            <Tooltip cursor={{ strokeDasharray: "3 3" }} />\n                            <Scatter\n                                yAxisId="left"\n                                name="A school"\n                                data={data01}\n                                fill="#8884d8"\n                            />\n                            <Scatter\n                                yAxisId="right"\n                                name="A school"\n                                data={data02}\n                                fill="#82ca9d"\n                            />\n                        </ScatterChart>\n                    </div>\n                </ResponsiveContainer>\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default ScatterRechart;\n\n'})})]})}function S(n={}){const{wrapper:e}={...(0,r.M)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(D,{...n})}):D(n)}},928:(n,e,t)=>{t.d(e,{c:()=>g});var a=t(1504),r=t(7404),s=t(9444),i=t(2084),o=t.n(i);const d="titleIcon_bpbP",c="card_If09",l="card_header_rEpg",h="card_title_O4vH",m="card_icon_D5Os",p="content_settings_YqcV",x="card_setting_ZMaz";var u=t(7624);const g=n=>{let{title:e="",titleIcon:t=null,titleBg:i="",isHeader:g=!0,headerPosition:v="top",bodyBg:C="",padding:y="16px",subscript:j="",icons:f=[],dismissible:b=!1,onClose:A=(()=>{}),children:k=""}=n;const[B,w]=(0,a.useState)(null),P=(0,a.useRef)();return(0,a.useEffect)((()=>{document.addEventListener("mousedown",(n=>{P?.current?.contains(n.target)||w(null)}))}),[]),(0,u.jsx)(a.Fragment,{children:(0,u.jsxs)(r.c,{className:`${c} rounded-0 w-100 h-100`,children:["bottom"===v?(0,u.jsx)("div",{style:{padding:y,background:C},children:k}):null,g?(0,u.jsx)(s.c,{className:`${l} rounded-0`,...i?{style:{background:i}}:"",children:(0,u.jsxs)("div",{className:"d-flex align-items-center "+(f.length>0?"justify-content-between":""),children:[(0,u.jsxs)("div",{children:[t?(0,u.jsx)("span",{className:o()(d,"titleIcon")}):null,(0,u.jsx)("strong",{className:h,children:e}),j]}),f.length>0&&(0,u.jsxs)("div",{ref:P,className:`d-flex align-items-center ${m}`,children:[f?.map(((n,e)=>(0,u.jsxs)(a.Fragment,{children:[(0,u.jsx)("button",{type:"button",onClick:()=>{w(B===e?null:e)},className:`${p} border-0 bg-transparent`,children:(0,u.jsx)("i",{className:n.icon})}),B===e&&n?.dropdown?.length>0?(0,u.jsx)("div",{className:x,children:n?.dropdown?.map(((n,e)=>(0,u.jsxs)("button",{type:"button",onClick:n?.method,children:[(0,u.jsx)("i",{className:n?.icon}),n.label]},e)))}):null]},e))),b?(0,u.jsx)("button",{type:"button",onClick:A,className:`${p} border-0 bg-transparent`,children:(0,u.jsx)("i",{className:"fa fa-times"})}):null]})]})}):null,"bottom"!==v?(0,u.jsx)("div",{style:{padding:y,background:C},children:k}):null]})})}},2504:(n,e,t)=>{t.d(e,{c:()=>r});t(1504);var a=t(7624);const r=function(n){let{children:e,title:t="Result"}=n;return(0,a.jsxs)("div",{className:"code-preview",children:[(0,a.jsx)("h4",{className:"code-preview-title",children:t}),(0,a.jsx)("div",{className:"preview",children:e})]})}}}]);